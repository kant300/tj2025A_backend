
[ 파일 만들기 ]
    1. [src]폴더 오른쪽 클릭
    2. [새로만들기]
        1. java 클래스
        2. 파일 ( 파일명.txt ): .java파일 아닌 어떤 종류의 파일 생성할때
        3. 패키지 ( 폴더 )

[ 자바 클래스 파일 생성 ]
    1. [src]폴더 오른쪽 클릭
    2. [새로만들기] -> [ 패키지 ] -> (강의기준 day01~ ) ,패키지는 클래스들을 그룹화하고 관리하기 위해
    3. [특정폴더] 오른쪽 클릭 -> [ 새로만들기 ] -> [java클래스]
        * 클래스 파일 명은 첫글자를 무조건 대문자로 시작.
        예) Example1

[ 자바 구동 원리 ]
    1. [코딩] 개발자는 .java 파일내 자바 문법 작성한다.
    - Example1.java ( 파일 )
    2. [실행] .java 파일 -- 컴파일(번역/해석) ---> .class 파일(바이트) 생성
    3. [처리] (컴퓨터가) .class 파일 처리한다.

[ 주석 ]
    HTML : <!-- 주석처리 -->
    CSS : /* 주석처리 */
    JS/JAVA :   // 한줄주석
                /*  여러줄주석 */

[ 자바 활용처 ]
    1. 소프트웨어 : javafx툴 활용, 등등
    2. 웹 : JSP , Spring 등등
    3. 앱 : 안드로이드 등등

[ 자바 코드 실행 ]
    - 자바는 클래스 단위로 컴파일 되고 , 컴파일된 코드는 main함수 부터 읽어서(스레드) 처리한다.


[ 요약 및 중요 사항 ]
Java Class: 자바 코드로 작성된 프로그램의 주요 구성 요소(클래스, 인터페이스 등)를 생성합니다.
            확장자는 항상 .java입니다.

File: 자바 코드 외의 모든 종류의 일반 파일을 생성합니다. 확장자를 직접 지정해야 합니다.

Package: 관련된 자바 클래스들을 논리적으로 묶어 관리하는 데 사용되는 디렉토리 구조입니다.
         자바 프로젝트의 코드 구조를 체계적으로 만드는 데 필수적입니다.

[ 리터럴 ]
    1.정의 : 키보드로 부터 입력한 자료
    2.종류
        정수(int) , 실수(double) , 문자( ' ' ) , 논리( ture/false )
[ 기본타입 ]
    1.정의 : 자료들의 분류
    2.목적 : 효율적인 자료 처리(*분리수거)
    3.종류(8가지)
        [ 정수 ]  byte        1byte        -128 ~ 127
                 short       2byte        +-3만정도 까지
                 int         4byte        +-21억정도 까지( *리터럴)
                 long        8byte        +-21억정도 이상 , 리터럴 정수 뒤에 L/l 붙이기
        [ 실수 ]  float       4byte        소수점8자리 표현, 리터럴실수 뒤에 F/f 붙이기
                 double      8byte        소수점17자리 표현( *리터럴 실수)
        [ 논리 ]  boolean     1byte        true/false
        [ 문자 ]  char        2byte        유니코드, ' '작은따옴표 감싼 문자1개
                 String      클래스         클래스 , " "큰따옴표 감싼 문자 여러개
[ 출력함수 ]
    1. System.out.print();          출력
    2. System.out.println();        출력후 줄바꿈
    3. System.out.printf( "형식문자1 형식문자2" , 값1 , 값2 );    서식(형식) 맞춤 출력
        - 형식문자 : %s문자열, %d정수 , %c문자 , %f실수
        - 자릿수 :
            %자릿수d : 자릿수만큼 자릿수 차지, 만일 비어 있으면 공백, 오른쪽 정렬
            %-자릿수d : 자릿수만큼 자릿수 차지, 만일 비어 있으면 공백, 왼쪽 정렬
            %0자릿수d : 자릿수만큼 자릿수 차지, 만일 비어 있으면 0채움
        - 소수점 자릿수 : %전체자릿수.소수점자릿수f : (소수점포함)전체 자릿수 만큼 자릿수차지
[ 이스케이프/제어문자 ] : 특수문자에 기능이 포함
    \n 줄바꿈 , \t 들여쓰기 , \\ 백슬래시 출력 , \' 작은따옴표 출력 , \" 큰따옴표 출력